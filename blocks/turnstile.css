/* Layout wrapper for the Cloudflare Turnstile widget */
.cf-turnstile-wrapper {
	margin-top: 12px;
	margin-bottom: 8px;
	display: flex;
	justify-content: center; /* change to .center class to center */
	align-items: center;
	width: 100%;
	max-width: 420px; /* limits widget width so it doesn't grow too large */
	box-sizing: border-box;
	transition: opacity 0.22s ease, transform 0.22s ease;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

/* Utility class to center the widget when desired */
.cf-turnstile-wrapper.center {
	justify-content: center;
}

/* Make the injected widget responsive and prevent layout shift */
.cf-turnstile-wrapper .cf-turnstile,
.cf-turnstile-wrapper iframe {
	width: 100% !important;
	max-width: 360px;
	box-sizing: border-box;
	display: block;
	transition: box-shadow 0.25s ease, transform 0.25s ease, opacity 0.2s ease;
}

@media (max-width: 480px) {
	/* Visible container width we want on small screens */
	.cf-turnstile-wrapper {
		width: 240px !important; /* target visual width */
		max-width: 100%;
		overflow: hidden !important; /* hide overflow of the iframe */
		margin-left: auto;
		margin-right: auto;
		padding: 0;
		box-sizing: border-box;
		transform-origin: top center;
		height: auto; /* will be adjusted by JS when possible */
	}

	/* Target the widget container and the iframe specifically.
       Keep the iframe at its native width and scale it down to the wrapper.
       Use !important so inline styles from the widget don't override layout. */
	.cf-turnstile-wrapper .cf-turnstile,
	.cf-turnstile-wrapper .cf-turnstile > iframe,
	.cf-turnstile-wrapper iframe {
		width: 320px !important; /* assume native widget width (adjusted by JS if different) */
		height: auto !important;
		transform: scale(
			0.75
		) !important; /* fallback scale (320 * 0.75 = 240 visible) */
		transform-origin: 0 0 !important; /* align scaled content with wrapper top-left */
		display: block !important;
		box-sizing: border-box !important;
	}

	/* ensure wrapper centers scaled content */
	.cf-turnstile-wrapper {
		display: block;
		text-align: center;
	}
}

/* Subtle focus/glow when user interacts with widget (dark & light modes) */
.cf-turnstile-wrapper:focus-within {
	outline: none;
	box-shadow: 0 6px 30px rgba(0, 0, 0, 0.12);
}

/* Disabled/blocked state (e.g. while submitting) */
.cf-turnstile-wrapper.loading {
	opacity: 0.6;
	pointer-events: none;
	filter: grayscale(0.25);
}

/* Dark mode tweaks: slightly stronger drop shadow and subtle cyan tint */
body.dark-mode .cf-turnstile-wrapper {
	filter: drop-shadow(0 10px 30px rgba(0, 60, 80, 0.25));
}

body.dark-mode .cf-turnstile-wrapper:focus-within {
	box-shadow: 0 8px 36px rgba(0, 180, 200, 0.1), 0 2px 8px rgba(0, 0, 0, 0.4);
}

/* Ensure images or injected inline elements inside the wrapper scale nicely */
.cf-turnstile-wrapper img,
.cf-turnstile-wrapper svg {
	max-width: 100%;
	height: auto;
	display: block;
}

/* Optional spacing tweak so submit button doesn't crowd the widget */
.cf-turnstile-wrapper + button[type="submit"],
.cf-turnstile-wrapper + input[type="submit"] {
	margin-top: 10px;
}
